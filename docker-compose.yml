version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "07092004"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # bot:
  #   build:
  #     context: .
  #     dockerfile: bot.Dockerfile
  #   env_file:
  #     - ./.env
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     mongodb:
  #       condition: service_healthy
  
  backend:
    build:
      context: ./backend
    container_name: backend-api
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      mongodb:
        condition: service_healthy
    restart: always

  # --- BARU: Layanan Frontend Next.js ---
  frontend:
    build:
      context: ./frontend
    container_name: frontend-dashboard
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules # Mencegah folder node_modules lokal menimpa yang ada di kontainer
      - /app/.next
    depends_on:
      - backend # Frontend baru akan jalan setelah backend siap
    restart: always

  # dashboard:
  #   build:
  #     context: .
  #     dockerfile: dashboard.Dockerfile
  #   ports:
  #     - "8501:8501"
  #   volumes:
  #     - .:/app
  #   command: >
  #     sh -c "
  #       echo 'Dashboard is waiting for the bot to process data...' &&
  #       sleep 120 &&
  #       echo 'Starting Streamlit dashboard...' &&
  #       streamlit run dashboard.py
  #     "
  #   depends_on:
  #     - bot
  #     - backend

volumes:
  mongo-data: